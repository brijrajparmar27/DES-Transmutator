{"version":3,"sources":["Header.js","useCrypto.js","Home.js","App.js","fonts/fonts.otf","index.js"],"names":["Header","console","log","className","useCrypto","calc","enc","message","key","output","keyHex","CryptoJS","Utf8","parse","DES","encrypt","mode","ECB","padding","pad","Pkcs7","toString","encryptByDES","temp","replace","decrypt","ciphertext","Base64","decryptByDES","Home","useState","isModeEnc","setisModeEnc","setKey","plaintext","setPlaintext","setOutput","handletextChange","e","what","target","value","onClick","style","backgroundColor","htmlFor","name","id","defaultValue","type","onChange","trim","outp","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c653e372.chunk.js","sourcesContent":["import \"./CSS/Header.css\";\r\n\r\nconst Header = () => {\r\n  console.log(\"header\");\r\n  return (\r\n    <div className=\"Header\">\r\n      <h2>DES Transmutator</h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import CryptoJS from \"crypto-js\";\r\n\r\nconst useCrypto = () => {\r\n  const calc = (enc, message, key) => {\r\n    var output;\r\n\r\n    //for Encryption\r\n    function encryptByDES(message, key) {\r\n      var keyHex = CryptoJS.enc.Utf8.parse(key);\r\n\r\n      var encrypted = CryptoJS.DES.encrypt(message, keyHex, {\r\n        mode: CryptoJS.mode.ECB,\r\n        padding: CryptoJS.pad.Pkcs7,\r\n      });\r\n\r\n      return encrypted.toString();\r\n    }\r\n\r\n    //for decryption\r\n    function decryptByDES(message, key) {\r\n      var keyHex = CryptoJS.enc.Utf8.parse(key);\r\n\r\n      //cleaning of text\r\n      var temp;\r\n      temp = message.replace(/\\\\u002F/g, \"/\");\r\n      message = temp;\r\n\r\n      // direct decrypt ciphertext\r\n      var decrypted = CryptoJS.DES.decrypt(\r\n        {\r\n          ciphertext: CryptoJS.enc.Base64.parse(message),\r\n        },\r\n        keyHex,\r\n        {\r\n          mode: CryptoJS.mode.ECB,\r\n          padding: CryptoJS.pad.Pkcs7,\r\n        }\r\n      );\r\n\r\n      return decrypted.toString(CryptoJS.enc.Utf8);\r\n    }\r\n\r\n    if (enc) {\r\n      output = encryptByDES(message, key);\r\n    } else {\r\n      output = decryptByDES(message, key);\r\n    }\r\n\r\n    return output\r\n  };\r\n\r\n  return {calc};\r\n};\r\nexport default useCrypto;\r\n","import \"./CSS/Home.css\";\r\nimport { useState } from \"react\";\r\n// import CryptoJS from \"crypto-js\";\r\nimport useCrypto from \"./useCrypto\";\r\n\r\nconst Home = () => {\r\n  const {calc} = useCrypto();\r\n  const [isModeEnc, setisModeEnc] = useState(true);\r\n  const [key, setKey] = useState(\"\");\r\n  const [plaintext, setPlaintext] = useState(\"\");\r\n  const [output, setOutput] = useState();\r\n\r\n  const Calculate = () => {\r\n    if (key.trim() && plaintext.trim()) {\r\n      // setOutput(decryptByDES(plaintext.trim(), key.trim()));\r\n      let outp = calc(isModeEnc,plaintext.trim(),key.trim());\r\n      console.log(outp);\r\n      setOutput(outp);\r\n    }\r\n  };\r\n  const handletextChange = (e, what) => {\r\n    if (what === \"key\") {\r\n      setKey(e.target.value);\r\n    } else {\r\n      setPlaintext(e.target.value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"content\">\r\n      <div className=\"center\">\r\n        <div className=\"function\">\r\n          <div\r\n            className=\"enc toogle\"\r\n            onClick={() => {\r\n              setisModeEnc(true);\r\n            }}\r\n            style={{\r\n              backgroundColor: isModeEnc ? \"#FFBF00\" : \"transparent\",\r\n            }}\r\n          >\r\n            <p className=\"fun_type\">Encrypt</p>\r\n          </div>\r\n          <div\r\n            className=\"dec toogle\"\r\n            onClick={() => {\r\n              setisModeEnc(false);\r\n            }}\r\n            style={{\r\n              backgroundColor: isModeEnc ? \"transparent\" : \"#FFBF00\",\r\n            }}\r\n          >\r\n            <p className=\"fun_type\">Decrypt</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"center\">\r\n        <div className=\"prop_sel\">\r\n          <div className=\"mode_sel\">\r\n            <label htmlFor=\"mode\" className=\"sel_label\">\r\n              Choose a Mode\r\n            </label>\r\n            <select name=\"mode\" id=\"mode\">\r\n              <option value=\"ECB\">ECB</option>\r\n              <option value=\"CBC\">CBC</option>\r\n              <option value=\"CTR\">CTR</option>\r\n              <option value=\"OFB\">OFB</option>\r\n              <option value=\"CFB\">CFB</option>\r\n            </select>\r\n          </div>\r\n\r\n          <div className=\"padd_sel\">\r\n            <label htmlFor=\"padd\" className=\"sel_label\">\r\n              Select Padding\r\n            </label>\r\n            <select name=\"padd\" id=\"padd\">\r\n              <option value=\"PKCS7\">PKCS7</option>\r\n              <option value=\"ZERO\">ZERO</option>\r\n              <option value=\"ISO10126\">ISO10126</option>\r\n              <option value=\"ANSIX923\">ANSIX923</option>\r\n              <option value=\"NONE\">NONE</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"center\">\r\n        <div className=\"inputs\">\r\n          <label htmlFor=\"key\" defaultValue={key}>\r\n            Key\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"key\"\r\n            className=\"key_tb inp_txt\"\r\n            onChange={(e) => {\r\n              handletextChange(e, \"key\");\r\n            }}\r\n          />\r\n          <label htmlFor=\"plaintext\">Plaintext</label>\r\n          <textarea\r\n            name=\"plaintext\"\r\n            value={plaintext}\r\n            className=\"plain_tb inp_txt\"\r\n            onChange={(e) => {\r\n              handletextChange(e, \"plaintext\");\r\n            }}\r\n          ></textarea>\r\n\r\n          {output && <div className=\"output\">{output}</div>}\r\n\r\n          <button className=\"submit_btn\" onClick={Calculate}>\r\n            Submit\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import \"./CSS/App.css\";\nimport Header from \"./Header\";\nimport Home from \"./Home\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","export default __webpack_public_path__ + \"static/media/fonts.0dd9f1c4.otf\";","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './CSS/index.css';\nimport App from './App';\nimport './fonts/fonts.otf';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}