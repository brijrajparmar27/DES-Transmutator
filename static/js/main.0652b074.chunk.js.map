{"version":3,"sources":["Header.js","Home.js","App.js","fonts/fonts.otf","index.js"],"names":["Header","console","log","className","Home","useState","isModeEnc","setisModeEnc","key","setKey","plaintext","setPlaintext","output","setOutput","handletextChange","e","what","target","value","onClick","style","backgroundColor","htmlFor","name","id","defaultValue","type","onChange","temp","replace","trim","ciphertext","keyHex","CryptoJS","enc","Utf8","parse","DES","decrypt","Base64","mode","ECB","padding","pad","Pkcs7","toString","decryptByDES","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oSAWeA,EATA,WAEX,OADAC,QAAQC,IAAI,UAER,qBAAKC,UAAU,SAAf,SACI,qD,wCCwJGC,EAzJF,WACX,MAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAsBF,mBAAS,IAA/B,mBAAOG,EAAP,KAAYC,EAAZ,KACA,EAAkCJ,mBAAS,IAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KACA,EAA4BN,qBAA5B,mBAAOO,EAAP,KAAeC,EAAf,KAuCA,IAKMC,EAAmB,SAACC,EAAGC,GACd,QAATA,EACFP,EAAOM,EAAEE,OAAOC,OAEhBP,EAAaI,EAAEE,OAAOC,QAI1B,OACE,sBAAKf,UAAU,UAAf,UACE,qBAAKA,UAAU,SAAf,SACE,sBAAKA,UAAU,WAAf,UACE,qBACEA,UAAU,aACVgB,QAAS,WACPZ,GAAa,IAEfa,MAAO,CACLC,gBAAiBf,EAAY,UAAY,eAN7C,SASE,mBAAGH,UAAU,WAAb,uBAEF,qBACEA,UAAU,aACVgB,QAAS,WACPZ,GAAa,IAEfa,MAAO,CACLC,gBAAiBf,EAAY,cAAgB,WANjD,SASE,mBAAGH,UAAU,WAAb,4BAIN,qBAAKA,UAAU,SAAf,SACE,sBAAKA,UAAU,WAAf,UACE,sBAAKA,UAAU,WAAf,UACE,uBAAOmB,QAAQ,OAAOnB,UAAU,YAAhC,2BAGA,yBAAQoB,KAAK,OAAOC,GAAG,OAAvB,UACE,wBAAQN,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,uBAIJ,sBAAKf,UAAU,WAAf,UACE,uBAAOmB,QAAQ,OAAOnB,UAAU,YAAhC,4BAGA,yBAAQoB,KAAK,OAAOC,GAAG,OAAvB,UACE,wBAAQN,MAAM,QAAd,mBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,WAAd,sBACA,wBAAQA,MAAM,WAAd,sBACA,wBAAQA,MAAM,OAAd,6BAMR,qBAAKf,UAAU,SAAf,SACE,sBAAKA,UAAU,SAAf,UACE,uBAAOmB,QAAQ,MAAMG,aAAcjB,EAAnC,iBAGA,uBACEkB,KAAK,OACLH,KAAK,MACLpB,UAAU,iBACVwB,SAAU,SAACZ,GACTD,EAAiBC,EAAG,UAGxB,uBAAOO,QAAQ,YAAf,uBACA,0BACEC,KAAK,YACLL,MAAOR,EACPP,UAAU,mBACVwB,SAAU,SAACZ,GACTD,EAAiBC,EAAG,gBAGxB,mBAAGZ,UAAU,QAAQgB,QAlIjB,WACV,IAAIS,EACJA,EAAOlB,EAAUmB,QAAQ,WAAY,KACrClB,EAAaiB,GACb3B,QAAQC,IAAIQ,GACZT,QAAQC,IAAI0B,IA6HN,mBAIChB,GAAU,qBAAKT,UAAU,SAAf,SAAyBS,IAEpC,wBAAQT,UAAU,aAAagB,QAnGrB,WACZX,EAAIsB,QAAUpB,EAAUoB,QAC1BjB,EApBJ,SAAsBkB,EAAYvB,GAChC,IAAIwB,EAASC,IAASC,IAAIC,KAAKC,MAAM5B,GAcrC,OAXgByB,IAASI,IAAIC,QAC3B,CACEP,WAAYE,IAASC,IAAIK,OAAOH,MAAML,IAExCC,EACA,CACEQ,KAAMP,IAASO,KAAKC,IACpBC,QAAST,IAASU,IAAIC,QAITC,SAASZ,IAASC,IAAIC,MAK3BW,CAAapC,EAAUoB,OAAQtB,EAAIsB,UAiGzC,6BCtIKiB,MATf,WACE,OACE,sBAAK5C,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,QCRS,ICMf6C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.0652b074.chunk.js","sourcesContent":["import \"./CSS/Header.css\"\r\n\r\nconst Header = ()=>{\r\n    console.log(\"header\");\r\n    return(\r\n        <div className=\"Header\">\r\n            <h2>DES Transmutator</h2>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;","import \"./Engine.js\";\r\nimport \"./CSS/Home.css\";\r\nimport { useState } from \"react/cjs/react.development\";\r\nimport CryptoJS from \"crypto-js\";\r\n\r\nconst Home = () => {\r\n  const [isModeEnc, setisModeEnc] = useState(true);\r\n  const [key, setKey] = useState(\"\");\r\n  const [plaintext, setPlaintext] = useState(\"\");\r\n  const [output, setOutput] = useState();\r\n\r\n  let clean = () => {\r\n    var temp;\r\n    temp = plaintext.replace(/\\\\u002F/g, \"/\");\r\n    setPlaintext(temp);\r\n    console.log(plaintext);\r\n    console.log(temp);\r\n  };\r\n\r\n  function encryptByDES(message, key) {\r\n    var keyHex = CryptoJS.enc.Utf8.parse(key);\r\n\r\n    var encrypted = CryptoJS.DES.encrypt(message, keyHex, {\r\n      mode: CryptoJS.mode.ECB,\r\n      padding: CryptoJS.pad.Pkcs7,\r\n    });\r\n\r\n    return encrypted.toString();\r\n  }\r\n\r\n  function decryptByDES(ciphertext, key) {\r\n    var keyHex = CryptoJS.enc.Utf8.parse(key);\r\n\r\n    // direct decrypt ciphertext\r\n    var decrypted = CryptoJS.DES.decrypt(\r\n      {\r\n        ciphertext: CryptoJS.enc.Base64.parse(ciphertext),\r\n      },\r\n      keyHex,\r\n      {\r\n        mode: CryptoJS.mode.ECB,\r\n        padding: CryptoJS.pad.Pkcs7,\r\n      }\r\n    );\r\n\r\n    return decrypted.toString(CryptoJS.enc.Utf8);\r\n  }\r\n\r\n  const calculate = () => {\r\n    if (key.trim() && plaintext.trim()) {\r\n      setOutput(decryptByDES(plaintext.trim(), key.trim()));\r\n    }\r\n  };\r\n  const handletextChange = (e, what) => {\r\n    if (what === \"key\") {\r\n      setKey(e.target.value);\r\n    } else {\r\n      setPlaintext(e.target.value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"content\">\r\n      <div className=\"center\">\r\n        <div className=\"function\">\r\n          <div\r\n            className=\"enc toogle\"\r\n            onClick={() => {\r\n              setisModeEnc(true);\r\n            }}\r\n            style={{\r\n              backgroundColor: isModeEnc ? \"#FFBF00\" : \"transparent\",\r\n            }}\r\n          >\r\n            <p className=\"fun_type\">Encrypt</p>\r\n          </div>\r\n          <div\r\n            className=\"dec toogle\"\r\n            onClick={() => {\r\n              setisModeEnc(false);\r\n            }}\r\n            style={{\r\n              backgroundColor: isModeEnc ? \"transparent\" : \"#FFBF00\",\r\n            }}\r\n          >\r\n            <p className=\"fun_type\">Decrypt</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"center\">\r\n        <div className=\"prop_sel\">\r\n          <div className=\"mode_sel\">\r\n            <label htmlFor=\"mode\" className=\"sel_label\">\r\n              Choose a Mode\r\n            </label>\r\n            <select name=\"mode\" id=\"mode\">\r\n              <option value=\"ECB\">ECB</option>\r\n              <option value=\"CBC\">CBC</option>\r\n              <option value=\"CTR\">CTR</option>\r\n              <option value=\"OFB\">OFB</option>\r\n              <option value=\"CFB\">CFB</option>\r\n            </select>\r\n          </div>\r\n\r\n          <div className=\"padd_sel\">\r\n            <label htmlFor=\"padd\" className=\"sel_label\">\r\n              Select Padding\r\n            </label>\r\n            <select name=\"padd\" id=\"padd\">\r\n              <option value=\"PKCS7\">PKCS7</option>\r\n              <option value=\"ZERO\">ZERO</option>\r\n              <option value=\"ISO10126\">ISO10126</option>\r\n              <option value=\"ANSIX923\">ANSIX923</option>\r\n              <option value=\"NONE\">NONE</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"center\">\r\n        <div className=\"inputs\">\r\n          <label htmlFor=\"key\" defaultValue={key}>\r\n            Key\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"key\"\r\n            className=\"key_tb inp_txt\"\r\n            onChange={(e) => {\r\n              handletextChange(e, \"key\");\r\n            }}\r\n          />\r\n          <label htmlFor=\"plaintext\">Plaintext</label>\r\n          <textarea\r\n            name=\"plaintext\"\r\n            value={plaintext}\r\n            className=\"plain_tb inp_txt\"\r\n            onChange={(e) => {\r\n              handletextChange(e, \"plaintext\");\r\n            }}\r\n          ></textarea>\r\n          <p className=\"clean\" onClick={clean}>\r\n            Clean\r\n          </p>\r\n\r\n          {output && <div className=\"output\">{output}</div>}\r\n\r\n          <button className=\"submit_btn\" onClick={calculate}>\r\n            Submit\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* <div>{plaintext}</div> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import './CSS/App.css';\nimport Header from './Header';\nimport Home from './Home';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header/>\n      <Home/>\n    </div>\n  );\n}\n\nexport default App;\n","export default __webpack_public_path__ + \"static/media/fonts.0dd9f1c4.otf\";","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './CSS/index.css';\nimport App from './App';\nimport './fonts/fonts.otf';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}